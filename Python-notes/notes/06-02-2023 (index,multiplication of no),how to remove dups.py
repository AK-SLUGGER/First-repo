Python 3.11.1 (tags/v3.11.1:a7a450f, Dec  6 2022, 19:58:39) [MSC v.1934 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
l1=[i for i in range(0,1000,7)]
for index,value in enumerate(li)
SyntaxError: incomplete input
l1=[i for i in range(0,1000,7)]
for index,value in enumerate(l1):
    
SyntaxError: multiple statements found while compiling a single statement
l1=[i for i in range(0,1000,7)]
for index,value in enumerate(l1):
    print(index,value)

    
0 0
1 7
2 14
3 21
4 28
5 35
6 42
7 49
8 56
9 63
10 70
11 77
12 84
13 91
14 98
15 105
16 112
17 119
18 126
19 133
20 140
21 147
22 154
23 161
24 168
25 175
26 182
27 189
28 196
29 203
30 210
31 217
32 224
33 231
34 238
35 245
36 252
37 259
38 266
39 273
40 280
41 287
42 294
43 301
44 308
45 315
46 322
47 329
48 336
49 343
50 350
51 357
52 364
53 371
54 378
55 385
56 392
57 399
58 406
59 413
60 420
61 427
62 434
63 441
64 448
65 455
66 462
67 469
68 476
69 483
70 490
71 497
72 504
73 511
74 518
75 525
76 532
77 539
78 546
79 553
80 560
81 567
82 574
83 581
84 588
85 595
86 602
87 609
88 616
89 623
90 630
91 637
92 644
93 651
94 658
95 665
96 672
97 679
98 686
99 693
100 700
101 707
102 714
103 721
104 728
105 735
106 742
107 749
108 756
109 763
110 770
111 777
112 784
113 791
114 798
115 805
116 812
117 819
118 826
119 833
120 840
121 847
122 854
123 861
124 868
125 875
126 882
127 889
128 896
129 903
130 910
131 917
132 924
133 931
134 938
135 945
136 952
137 959
138 966
139 973
140 980
141 987
142 994
l_2=[(index,value) for index,value in enumerate(l1)]
l_2
[(0, 0), (1, 7), (2, 14), (3, 21), (4, 28), (5, 35), (6, 42), (7, 49), (8, 56), (9, 63), (10, 70), (11, 77), (12, 84), (13, 91), (14, 98), (15, 105), (16, 112), (17, 119), (18, 126), (19, 133), (20, 140), (21, 147), (22, 154), (23, 161), (24, 168), (25, 175), (26, 182), (27, 189), (28, 196), (29, 203), (30, 210), (31, 217), (32, 224), (33, 231), (34, 238), (35, 245), (36, 252), (37, 259), (38, 266), (39, 273), (40, 280), (41, 287), (42, 294), (43, 301), (44, 308), (45, 315), (46, 322), (47, 329), (48, 336), (49, 343), (50, 350), (51, 357), (52, 364), (53, 371), (54, 378), (55, 385), (56, 392), (57, 399), (58, 406), (59, 413), (60, 420), (61, 427), (62, 434), (63, 441), (64, 448), (65, 455), (66, 462), (67, 469), (68, 476), (69, 483), (70, 490), (71, 497), (72, 504), (73, 511), (74, 518), (75, 525), (76, 532), (77, 539), (78, 546), (79, 553), (80, 560), (81, 567), (82, 574), (83, 581), (84, 588), (85, 595), (86, 602), (87, 609), (88, 616), (89, 623), (90, 630), (91, 637), (92, 644), (93, 651), (94, 658), (95, 665), (96, 672), (97, 679), (98, 686), (99, 693), (100, 700), (101, 707), (102, 714), (103, 721), (104, 728), (105, 735), (106, 742), (107, 749), (108, 756), (109, 763), (110, 770), (111, 777), (112, 784), (113, 791), (114, 798), (115, 805), (116, 812), (117, 819), (118, 826), (119, 833), (120, 840), (121, 847), (122, 854), (123, 861), (124, 868), (125, 875), (126, 882), (127, 889), (128, 896), (129, 903), (130, 910), (131, 917), (132, 924), (133, 931), (134, 938), (135, 945), (136, 952), (137, 959), (138, 966), (139, 973), (140, 980), (141, 987), (142, 994)]
n_1=[i for i in range (1000) if i%7==0]
n=3[(index,value) for index,value in enumerate(n_1)]
SyntaxError: invalid syntax
n_1=[i for i in range (1000) if i%7==0]n=3[(index,value) for index,value in enumerate(n_1)]
SyntaxError: invalid syntax
n_1=[i for i in range (1000) if i%7==0]
n3=[(index,value) for index,value in enumerate(n_1)]
n3
[(0, 0), (1, 7), (2, 14), (3, 21), (4, 28), (5, 35), (6, 42), (7, 49), (8, 56), (9, 63), (10, 70), (11, 77), (12, 84), (13, 91), (14, 98), (15, 105), (16, 112), (17, 119), (18, 126), (19, 133), (20, 140), (21, 147), (22, 154), (23, 161), (24, 168), (25, 175), (26, 182), (27, 189), (28, 196), (29, 203), (30, 210), (31, 217), (32, 224), (33, 231), (34, 238), (35, 245), (36, 252), (37, 259), (38, 266), (39, 273), (40, 280), (41, 287), (42, 294), (43, 301), (44, 308), (45, 315), (46, 322), (47, 329), (48, 336), (49, 343), (50, 350), (51, 357), (52, 364), (53, 371), (54, 378), (55, 385), (56, 392), (57, 399), (58, 406), (59, 413), (60, 420), (61, 427), (62, 434), (63, 441), (64, 448), (65, 455), (66, 462), (67, 469), (68, 476), (69, 483), (70, 490), (71, 497), (72, 504), (73, 511), (74, 518), (75, 525), (76, 532), (77, 539), (78, 546), (79, 553), (80, 560), (81, 567), (82, 574), (83, 581), (84, 588), (85, 595), (86, 602), (87, 609), (88, 616), (89, 623), (90, 630), (91, 637), (92, 644), (93, 651), (94, 658), (95, 665), (96, 672), (97, 679), (98, 686), (99, 693), (100, 700), (101, 707), (102, 714), (103, 721), (104, 728), (105, 735), (106, 742), (107, 749), (108, 756), (109, 763), (110, 770), (111, 777), (112, 784), (113, 791), (114, 798), (115, 805), (116, 812), (117, 819), (118, 826), (119, 833), (120, 840), (121, 847), (122, 854), (123, 861), (124, 868), (125, 875), (126, 882), (127, 889), (128, 896), (129, 903), (130, 910), (131, 917), (132, 924), (133, 931), (134, 938), (135, 945), (136, 952), (137, 959), (138, 966), (139, 973), (140, 980), (141, 987), (142, 994)]
l=[(i/7,i) for i in range(1000) if i%7==0]


l
[(0.0, 0), (1.0, 7), (2.0, 14), (3.0, 21), (4.0, 28), (5.0, 35), (6.0, 42), (7.0, 49), (8.0, 56), (9.0, 63), (10.0, 70), (11.0, 77), (12.0, 84), (13.0, 91), (14.0, 98), (15.0, 105), (16.0, 112), (17.0, 119), (18.0, 126), (19.0, 133), (20.0, 140), (21.0, 147), (22.0, 154), (23.0, 161), (24.0, 168), (25.0, 175), (26.0, 182), (27.0, 189), (28.0, 196), (29.0, 203), (30.0, 210), (31.0, 217), (32.0, 224), (33.0, 231), (34.0, 238), (35.0, 245), (36.0, 252), (37.0, 259), (38.0, 266), (39.0, 273), (40.0, 280), (41.0, 287), (42.0, 294), (43.0, 301), (44.0, 308), (45.0, 315), (46.0, 322), (47.0, 329), (48.0, 336), (49.0, 343), (50.0, 350), (51.0, 357), (52.0, 364), (53.0, 371), (54.0, 378), (55.0, 385), (56.0, 392), (57.0, 399), (58.0, 406), (59.0, 413), (60.0, 420), (61.0, 427), (62.0, 434), (63.0, 441), (64.0, 448), (65.0, 455), (66.0, 462), (67.0, 469), (68.0, 476), (69.0, 483), (70.0, 490), (71.0, 497), (72.0, 504), (73.0, 511), (74.0, 518), (75.0, 525), (76.0, 532), (77.0, 539), (78.0, 546), (79.0, 553), (80.0, 560), (81.0, 567), (82.0, 574), (83.0, 581), (84.0, 588), (85.0, 595), (86.0, 602), (87.0, 609), (88.0, 616), (89.0, 623), (90.0, 630), (91.0, 637), (92.0, 644), (93.0, 651), (94.0, 658), (95.0, 665), (96.0, 672), (97.0, 679), (98.0, 686), (99.0, 693), (100.0, 700), (101.0, 707), (102.0, 714), (103.0, 721), (104.0, 728), (105.0, 735), (106.0, 742), (107.0, 749), (108.0, 756), (109.0, 763), (110.0, 770), (111.0, 777), (112.0, 784), (113.0, 791), (114.0, 798), (115.0, 805), (116.0, 812), (117.0, 819), (118.0, 826), (119.0, 833), (120.0, 840), (121.0, 847), (122.0, 854), (123.0, 861), (124.0, 868), (125.0, 875), (126.0, 882), (127.0, 889), (128.0, 896), (129.0, 903), (130.0, 910), (131.0, 917), (132.0, 924), (133.0, 931), (134.0, 938), (135.0, 945), (136.0, 952), (137.0, 959), (138.0, 966), (139.0, 973), (140.0, 980), (141.0, 987), (142.0, 994)]
k=[(i,v)for i,v in enumerate(range(0,1000,7))]

k
[(0, 0), (1, 7), (2, 14), (3, 21), (4, 28), (5, 35), (6, 42), (7, 49), (8, 56), (9, 63), (10, 70), (11, 77), (12, 84), (13, 91), (14, 98), (15, 105), (16, 112), (17, 119), (18, 126), (19, 133), (20, 140), (21, 147), (22, 154), (23, 161), (24, 168), (25, 175), (26, 182), (27, 189), (28, 196), (29, 203), (30, 210), (31, 217), (32, 224), (33, 231), (34, 238), (35, 245), (36, 252), (37, 259), (38, 266), (39, 273), (40, 280), (41, 287), (42, 294), (43, 301), (44, 308), (45, 315), (46, 322), (47, 329), (48, 336), (49, 343), (50, 350), (51, 357), (52, 364), (53, 371), (54, 378), (55, 385), (56, 392), (57, 399), (58, 406), (59, 413), (60, 420), (61, 427), (62, 434), (63, 441), (64, 448), (65, 455), (66, 462), (67, 469), (68, 476), (69, 483), (70, 490), (71, 497), (72, 504), (73, 511), (74, 518), (75, 525), (76, 532), (77, 539), (78, 546), (79, 553), (80, 560), (81, 567), (82, 574), (83, 581), (84, 588), (85, 595), (86, 602), (87, 609), (88, 616), (89, 623), (90, 630), (91, 637), (92, 644), (93, 651), (94, 658), (95, 665), (96, 672), (97, 679), (98, 686), (99, 693), (100, 700), (101, 707), (102, 714), (103, 721), (104, 728), (105, 735), (106, 742), (107, 749), (108, 756), (109, 763), (110, 770), (111, 777), (112, 784), (113, 791), (114, 798), (115, 805), (116, 812), (117, 819), (118, 826), (119, 833), (120, 840), (121, 847), (122, 854), (123, 861), (124, 868), (125, 875), (126, 882), (127, 889), (128, 896), (129, 903), (130, 910), (131, 917), (132, 924), (133, 931), (134, 938), (135, 945), (136, 952), (137, 959), (138, 966), (139, 973), (140, 980), (141, 987), (142, 994)]
#to ramove the dups
l_1=[1,2,3,4]
l_2=[1,2,8,7]
l_3=[3,4,8,7]
# program to remove duplicate elements
for i in l_1:
    if i in l_2:
        print(i)

        
1
2
#but this is for common we need to print the uncommonns
for i inl_1:
    
SyntaxError: invalid syntax
for i in l_1:
    if i not in l_2:
        print(i)

        
3
4
for i in l_1:
    if i not in l-2:
        print(i)

        
Traceback (most recent call last):
  File "<pyshell#40>", line 2, in <module>
    if i not in l-2:
TypeError: unsupported operand type(s) for -: 'list' and 'int'
for i in l_1:
    if i not in l_2:
        print(i)

        
3
4
for i in l_2:
    if i not in l_1:
        print(i)

        
8
7
